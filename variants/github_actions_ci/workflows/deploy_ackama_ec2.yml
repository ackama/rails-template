# Deploy the application with Capistrano to Ackama's style of EC2 instances
name: Deploy application
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - production

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy application
    runs-on: ubuntu-latest

    # 15 minutes should be allowed for Capistrano to execute a deploy.
    timeout-minutes: 15

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    steps:
      # Defines the variables needed for future steps, based off of the github.ref, indicating which environment we
      # are deploying into.
      - name: Set variables
        id: variables
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/production' ]]; then
            echo ::set-output name=ENVIRONMENT::production
            echo ::set-output name=AWS_ROLE_TO_ASSUME::ClientNameProductionGHARole
          elif [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo ::set-output name=ENVIRONMENT::staging
            echo ::set-output name=AWS_ROLE_TO_ASSUME::ClientNameStagingGHARole
          fi

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Ruby (version given by .ruby-version)
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Configure AWS credentials using OpenID Connect to AssumeRole
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-session-name: GitHubActionsDeployment
          role-to-assume: arn:aws:iam::898811473177:role/${{ steps.variables.outputs.AWS_ROLE_TO_ASSUME }}
          aws-region: ap-southeast-2

      - name: Install SSH key for production
        uses: shimataro/ssh-key-action@v2
        if: github.ref == 'refs/heads/production'
        with:
          key: ${{ secrets.PRODUCTION_SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Install SSH key for staging
        uses: shimataro/ssh-key-action@v2
        if: github.ref == 'refs/heads/main'
        with:
          key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Deploy application
        run: |
          bundle exec cap ${{ steps.variables.outputs.ENVIRONMENT }} deploy
