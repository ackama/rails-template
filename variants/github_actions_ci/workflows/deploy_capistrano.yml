name: Deploy to Production

on:
  push:
    branches:
      - production

env:
  RAILS_ENV: test
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres

jobs:
  linters:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run Rubocop
        run: |
          bundle exec rubocop --disable-pending-cops

      - name: Run Brakeman
        run: |
          gem install --no-document brakeman
          brakeman --run-all-checks --exit-on-warn --format plain .

      - name: Run Bundle Audit
        run: |
          bundle exec bundle audit --update
  eslint-and-prettier:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
      - run: yarn run js-lint
      - run: yarn run format-check
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      db:
        image: postgres
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Required OS Packages
        run: |
          sudo apt-get -yqq install libpq-dev

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Prepare app
        run: |
          bin/setup

      - name: Run Specs
        run: |
          bundle exec rspec spec --format progress
  deploy:
    needs:
      - linters
      - tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Deploy to Heroku PRODUCTION
        uses: akhileshns/heroku-deploy@v3.8.9
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME_PRODUCTION }}
