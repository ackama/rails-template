#!/usr/bin/env ruby

require "fileutils"

root_path = File.absolute_path(File.join(__dir__, "../.."))
template_path = File.join(root_path, "template.rb")
builds_path = File.join(root_path, "tmp/builds")
app_name = ENV.fetch("APP_NAME", "app")
app_path = File.join(builds_path, app_name)
config_path = File.join(root_path, ENV.fetch("CONFIG_PATH", "ci/configs/basic.yml"))
skip_flags = ENV.fetch("SKIPS", "")

puts "=" * 80
puts <<~EO_CONFIG_SUMMARY
  Config summary:

    template_path = #{template_path}
    builds_path = #{builds_path}
    app_name = #{app_name}
    app_path = #{app_path}
    template_path = #{template_path}
    config_path = #{config_path}
EO_CONFIG_SUMMARY
puts "=" * 80

raise "Missing config YML file" unless File.exist?(config_path) & File.file?(config_path)

puts "Installing latest rails gem"
system "gem install rails --no-document"

unless Dir.exist?(builds_path)
  puts "Creating #{builds_path}"
  FileUtils.mkdir_p(builds_path)
end

if Dir.exist?(app_path)
  puts "Removing old build from #{app_path}"
  FileUtils.rm_rf(app_path)
end

Dir.chdir(builds_path) do |cwd|
  puts "Working dir is now #{cwd}"
  cmd = %Q(CONFIG_PATH="#{config_path}" RACK_ENV=development RAILS_ENV=development rails new "#{app_name}" -d postgresql #{skip_flags} -m "#{template_path}")
  puts <<~EO_HELP
    Build command:
    #{cmd}
  EO_HELP

  system(cmd, exception: true)
end

puts "Running test suite"
Dir.chdir(app_path) do |cwd|
  puts "Working dir is now #{cwd}"
  system("./bin/ci-run", exception: true)
end
